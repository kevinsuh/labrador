(function() {

	angular.module('card-queue').controller("RecipientFormController", function($rootScope, $scope, recipients, cards, FileUploader)
    {

		// trigger file upload with clicking on profile picture circle
		recipientPicture = angular.element(document.querySelector("#recipientPicture"));
		fileInput = angular.element(document.querySelector("#fileInput"));

		recipientPicture.click(function() {
			fileInput.click();
		});

		// callback on successful upload
		$scope.uploader.onSuccessItem = function(fileItem, response, status, headers) {
			console.log("new success item");
			console.log(response);
			console.log($scope.selectedRecipient);

			// update profile picture
			recipient = response.recipient;
			$scope.selectedRecipient = recipient;

			// $scope.recipients.updatePictureOnSuccess(response.recipient);
			// this is for updating recipient
      index = findWithAttr($scope.currentRecipients, 'id', recipient.id);
      console.log(index);
      console.log(recipient);
      recipients.currentRecipients[index] = recipient;
      $scope.recipients.currentRecipients[index] = recipient;
      console.log($scope.currentRecipients);
      console.log(recipients.currentRecipients);

			//profile_picture_id = response.profile_picture_id;
			//$scope.recipients.updatePictureForRecipient($scope.recipient.id, profile_picture_id);
    };

    
		// create occasion with the given inputs
		$scope.createOccasion = function(occasion) {
			// 1. add to the "existing" occasions
			// 2. reset template of most recent address
			if (occasion.month && occasion.day) { // must have these data
				occasion.newOccasion = false;
				$scope.selectedRecipient.occasions.push(occasion);
				$scope.newRecipientOccasion = angular.copy($scope.newRecipientOccasionTemplate);
			}

		}

		// delete this given occasion
		$scope.deleteOccasion = function(occasionHash) {
			
			if (occasionHash.newOccasion) { // this is the tail-end "new" occasion
				$scope.newRecipientOccasion = angular.copy($scope.newRecipientOccasionTemplate);
			} else { // existing occasion
				
				occasionHashes = $scope.selectedRecipient.occasions;
				occasionID = occasionHash.recipient_occasion.occasion_id;

				index = -1;

				for(var i = 0; i < occasionHashes.length; i += 1) {
	        if(occasionHashes[i].recipient_occasion.occasion_id === occasionID) {
	            index = i;
	        }
		    }
	   		$scope.selectedRecipient.occasions = arrayWithIndexRemoved(index, occasionHashes);
			}
		}


		// create address with the given inputs
		$scope.createAddress = function(address) {
			// 1. add to the "existing" addresses
			// 2. reset template of most recent address
			if (address.street && address.city && address.state && address.zipcode) { // must have these data
				address.newAddress = false;
				$scope.selectedRecipient.addresses.push(address);
				$scope.newRecipientAddress = angular.copy($scope.newRecipientAddressTemplate);
			}
		}

		// delete this given address
		$scope.deleteAddress = function(address) {
			addresses = $scope.selectedRecipient.addresses;
			if (address.newAddress) { // this is the tail-end "new" address
				$scope.newRecipientAddress = angular.copy($scope.newRecipientAddressTemplate);
			} else { // existing addresses
				$scope.selectedRecipient.addresses = arrayWithValueRemoved(address, addresses);
			}
		}

	});

})();


