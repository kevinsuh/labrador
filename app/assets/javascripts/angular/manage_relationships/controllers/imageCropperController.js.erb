(function() {

    angular.module('card-queue').controller("ImageCropperCtrl", function($scope)
    {
    	// scope.recipients, scope.recipient, scope.uploader passed in from outer controller of recipient modal form
      
      $scope.activeRecipientImage = false;
      
      fileInput = angular.element(document.querySelector("#fileInput"));


      $scope.cancelRecipientImage = function() {
        $scope.activeRecipientImage = false;
        $scope.recipientImage = false;
      }

      $scope.saveRecipientImage = function() {
        $scope.activeRecipientImage = false;
      }

      // show preview with cropping image
      $scope.uploader.onAfterAddingFile = function(item) {
      	
      	// make the new uploaded image crop-able
      	$scope.myCroppedImage = "";

        fileInput.val("");

      	var reader = new FileReader();
      	reader.onload = function(event) {
      		$scope.$apply(function() {
      			$scope.recipientImage = event.target.result;
            $scope.activeRecipientImage = true;
      		});
      	};
      	reader.readAsDataURL(item._file);
      }

      // upload blob (cropped image) instead of file
      $scope.uploader.onBeforeUploadItem = function(item) {
      	var blob = dataURItoBlob($scope.myCroppedImage);
      	item.formData.push({update_recipient_id: $scope.selectedRecipient.id});
      	item._file = blob;
      };

      // filters for the file uploader
			$scope.uploader.filters.push({
        name: 'onlyOneRecipientImageFilter',
        fn: function(item /*{File|FileLikeObject}*/ , options) {
          if(this.queue.length==1) {
           this.clearQueue();
          }
          return true;
        }
    	});
       
       /**
		   * Converts data uri to Blob. Necessary for uploading.
		   * @see
		   *   http://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata
		   * @param  {String} dataURI
		   * @return {Blob}
		   */
		  var dataURItoBlob = function(dataURI) {
		    var binary = atob(dataURI.split(',')[1]);
		    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
		    var array = [];
		    for(var i = 0; i < binary.length; i++) {
		      array.push(binary.charCodeAt(i));
		    }
		    return new Blob([new Uint8Array(array)], {type: mimeString});
		  };

    });

})();
