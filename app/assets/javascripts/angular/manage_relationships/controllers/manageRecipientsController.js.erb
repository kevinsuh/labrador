(function() {
	
	/**
	 * this controller is specific to the managing relationship within the "Greeting Central" module
	 */
	var app = angular.module('card-queue').controller("ManageRecipientsController", function($rootScope, $scope, $state, $timeout, $modal, recipients, cards, usSpinnerService) {
				
			// load in user and relationships factories
      $scope.testImage = "/assets/blank_user.png";

			// new manage relationships feature!
			$scope.recipients           = recipients; // the "factory" recipients object
			$scope.relationships        = recipients.relationships;
			$scope.currentRecipients    = recipients.currentRecipients;
			$scope.newRecipient         = recipients.newRecipient;
			$scope.newRecipientTemplate = recipients.newRecipientTemplate;
			$scope.relationships        = recipients.relationships;
			$scope.occasions            = cards.occasions;

			console.log($scope.currentRecipients);

			// test whether you are currently at this state or not
			$scope.$on('$stateChangeSuccess',
			  function(event, toState) {
			    $scope.currentState = toState.name;
			    makeStateActive($scope.currentState);
		    });

			// opens up the modal form with the recipient model passed in
			// empty recipient model for create, filled in recipient for new
			$scope.open_modal_form = function(recipient) {

				$modal.open({
					templateUrl: 'angular/manage_recipients/recipient_modal_form.html',
					backdrop: true,
					windowClass: 'modal',
					controller: function ($scope, $modalInstance, photo, relationships, occasions, recipients, currentRecipients) {

						$scope.recipients           = recipients; // the "factory" recipients object
						$scope.currentRecipients    = currentRecipients;
						$scope.recipient            = recipient;
						$scope.photo                = photo;
						$scope.relationships        = relationships;
						$scope.occasions            = occasions

						$scope.newOccasion = function() {
							occasionTemplate = {
								recipient_occasion: {
									occasion_date: "",
									occasion_id: 1,
									recipient_id: $scope.recipient.id
								}
							};
							$scope.recipient.occasions.push(occasionTemplate);
						}

						isNewRecipient = (recipient.id > 0 ? false : true);

						// modal form submit
						$scope.submit = function() {

							recipients        = $scope.recipients; // factory recipients
							recipient         = $scope.recipient; // passed in recipient
							currentRecipients = $scope.currentRecipients; // existing recipients

							if (isNewRecipient) { // create
								console.log('creating new recipient!');

					    	recipients.createRecipient()
					      .success(function(data) {
					      	recipient = data.recipient
									recipients.currentRecipients.push(recipient)
									recipients.newRecipient = recipients.newRecipientTemplate;
					      	console.log(data);

					      })
					      .error(function(data) {
				          console.log("error in create recipient submit modal");
				          console.log(data);
				        });
							} else { // update
								console.log('updating existing recipient!');

								recipients.updateRecipient()
								.success(function(data) {
									console.log(data);
								})
								.error(function(data) {
									console.log("error in update recipient modal");
									console.log(data);
								})

							}
							
							$modalInstance.dismiss('cancel');
						};

					},
					resolve: {
						photo: function() {
							return $scope.testImage;
						},
						relationships: function() {
							return $scope.relationships;
						},
						occasions: function() {
							return $scope.occasions;
						},
						recipients: function() {
							return $scope.recipients;
						},
						currentRecipients: function() {
							return $scope.currentRecipients;
						}
					},
					animation: false,
					size: "md",
					windowClass: "recipient_modal_form center_modal"
				});
			};

			/**
			 * jQuery plugins to deal with outside of the app
			*/
			// side bar link
			/*
			var viewRecipientsButtonDOMElement = document.querySelector("#my_people");
			var viewRecipientsButton = angular.element(viewRecipientsButtonDOMElement);

			
			var homeLogoButtonDOMElement = document.querySelector("#home_logo");
			var homeLogoButton = angular.element(homeLogoButtonDOMElement);
			// go home on this click!
			homeLogoButton.on('click', function() {
				$state.go('home.app.step1');
			})
			*/
			
		});

	// date formatter from JSON to date type
	app.directive('jsonDate', function($filter) {
      return  {
          restrict: 'A',
          require: 'ngModel',
          link: function (scope, element, attrs, ngModel) {

             //format text going to user (model to view)
             ngModel.$formatters.push(function(value) {
                var date = new Date(value);
                return date;
             });

             //format text from the user (view to model)
             ngModel.$parsers.push(function(value) {
                var date = new Date(value);
                return date;
             });
         }
     }
   });

})();