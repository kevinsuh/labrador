(function() {
	
	/**
	 * this controller is specific to queuing up the cards through an awesome multi-step form, then saving the data and queueing up another card
	 */
	var app = angular.module('card-queue').controller("CardQueueController", function($rootScope, $scope, $state, $timeout, cards, usSpinnerService) {
			
			$scope.newCard = cards.newCard;
			$scope.cardsLoaded = false; // loading up curated cards

			/**
			 * submit the final card queue form that contains the information on newCard
			 * this will submit the form and upon success, add it to the queuedCards array of cards. on failure, it will let the user know what the issue is
			 */
	    $scope.submitCardQueueForm = function() {
	    	// first step is to create a date based on the values
				var day   = $scope.date.day;
				var month = $scope.date.month;
				var year  = "20" + $scope.date.year;
				var date  = new Date(year, month, day);

				$scope.newCard.recipientArrivalDate = date;
				var queuedCard = $scope.newCard;

	    	cards.queueCard()
	    	.success(function(data) {

					var order   = data.order;
					var isValid = order.is_valid;
	    		
	    		console.log("order return: ");
	    		console.log(order);

	    		console.log("card that you just queued: ");
					console.log(queuedCard);

		    	if (isValid) {

		    	} else {
		    		alert("Something went wrong. Is your form completely filled out?");
		    	}
				})
				.error(function(data) {
					console.log("error in submitCardQueueForm");
					console.log(data);
				});
	    };

			// new angular nl method
			$scope.occasions     = cards.occasions;
			$scope.relationships = cards.relationships;
			$scope.cardFlavors   = cards.cardFlavors

			$scope.months = {
				January: 0,
				February: 1,
				March: 2,
				April: 3,
				May: 4,
				June: 5,
				July: 6,
				August: 7,
				September: 8,
				October: 9,
				November: 10,
				December: 11
			};

			// collect month, then make it into a datetime obj
			$scope.date = {
				month: "",
				day: "",
				year: ""
			}


			// don't allow more than 3 card flavors!
			$scope.$watch('newCard.cardFlavors.length', function(newValue, oldValue){
          if (newValue > 3) {
          	$scope.newCard.cardFlavors.shift();
          }
        }
	    );

	    $scope.$on('$stateChangeSuccess',
			  function(event, toState) {
			    $scope.currentState = toState.name;
			    console.log($scope.newCard);
			    // start the ajax call on step 4
			    if ($scope.currentState == "home.app.step4") {
			    	// simulate retrieval of cards
			    	$scope.cardsLoaded = false;
			    	$timeout(function() {
			    		cards.getCuratedCards().then(function(data) {
			    			$scope.cardsLoaded = true;
			    		})
			    	}, 1250);
			    }
			  }
			)
				
			/**
			 * make sure that all of the data is filled out for each new card queue
			 */
			$scope.stepsValid = {
				one: false,
				two: false,
				three: false,
				four: false,
				five: false
			}

			$scope.cardQueueStateIsValid = function() {

				var valid = false;
				switch($scope.currentState) {
					case "home.app.step1":
						if ($scope.newCard.recipientFirstName != "" && $scope.newCard.recipientLastName != "")
							valid = true;
						else
							valid = false;

						valid = true;
						break;
					case "home.app.step2":
						if ($scope.date.day != "" && $scope.date.year != "")
							valid = true;
						else
							valid = false;

						valid = true;
						break;
					case "home.app.step3":
						valid = true; // it can be "anything"
						break;
					case "home.app.step4": // finding your card...
						usSpinnerService.spin('card-find-spinner');
						valid = false;

						valid = true;
						break;
					case "home.app.step5":
						valid = false;

						valid = true;
				}
				
				return valid;
			}
	});

})();

