(function() {
	
	/**
	 * this controller is specific to queuing up the cards through an awesome multi-step form, then saving the data and queueing up another card
	 */
	var app = angular.module('card-queue').controller("CardQueueController", function($rootScope, $scope, $state, $timeout, cards, user, usSpinnerService) {
				
			// load in the information from cards factory
			$scope.newCard        = cards.newCard;
			$scope.queuedCards    = cards.queuedCards;
			$scope.purchasedCards = cards.purchasedCards
			$scope.cardsLoaded    = false; // loading up curated cards
			$scope.occasions      = cards.occasions;
			$scope.relationships  = cards.relationships;
			$scope.cardFlavors    = cards.cardFlavors

			// set the minimum recipient date
      $scope.minimumRecipientDate = recipientDate();

      $scope.testImage = "/assets/blank_user.png";

			// load in user
			$scope.user = user;

			var queuedButtonDOMElement = document.querySelector("#view_queued");
			var queuedCountDOMElement = document.querySelector("#queued_count");
			var purchasedCountDOMElement = document.querySelector("#purchased_count");
			var purchasedButtonDOMElement= document.querySelector("#view_purchased");

			var queuedButton = angular.element(queuedButtonDOMElement);
			var queuedCount = angular.element(queuedCountDOMElement);
			var purchasedCount = angular.element(purchasedCountDOMElement);
			var purchasedButton = angular.element(purchasedButtonDOMElement);

			// don't allow more than 3 card flavors!
			$scope.$watch('newCard.cardFlavors.length', function(newValue, oldValue){
          if (newValue > 3) {
          	$scope.newCard.cardFlavors.shift();
          }
       });

			/**
			 * submit the final card queue form that contains the information on newCard
			 * this will submit the form and upon success, add it to the queuedCards array of cards. on failure, it will let the user know what the issue is
			 */
	    $scope.submitCardQueueForm = function() {
	    	// first step is to create a date based on the values
				
				var queuedCard = $scope.newCard;
				var queuedCards = $scope.queuedCards;

	    	cards.queueCard()
	      .success(function(data) {

	        var queuedCardOrder = data.order;
	        var isValid         = queuedCardOrder.is_valid;

	        if (isValid) {
	          $scope.queuedCards.push(queuedCardOrder);
	          $scope.newCard = cards.newCardTemplate;
	          queuedCount.text(queuedCards.length); // update new queued counter
	          $state.go('home.app.step1');
	        } else {
	          alert("Something went wrong. Is your form completely filled out?");
	        }
	        
	      })
	      .error(function(data) {
          console.log("error in submitCardQueueForm");
          console.log(data);
        });;
	    };

			// control what happens on each state of UI-Router
	    $scope.$on('$stateChangeSuccess',
			  function(event, toState) {
			    $scope.currentState = toState.name;
			    // start the ajax call on step 4
			    if ($scope.currentState == "home.app.step4") {
			    	// simulate retrieval of cards
			    	$timeout(function() {
			    		cards.getCuratedCards().then(function(data) {
			    			$scope.cardsLoaded = true;
			    		})
			    	}, 1500);
			    }
			    // hack to restart "loading" illusion when going before page 4 of the app
			    if ($scope.currentState == "home.app.step3") {
			    	$scope.cardsLoaded = false;
			    }

			    // final page! lots of configuration can be done here
			    if ($scope.currentState == "home.app.step5") {
			    	
			    	// date time of receive date
						console.log($scope.newCard);

						// selected card into JSON
						$scope.newCard.selectedCard = JSON.parse($scope.newCard.selectedCard);
			    }
			  }
			)
				
			/**
			 * make sure that all of the data is filled out for each new card queue
			 */
			$scope.stepsValid = {
				one: false,
				two: false,
				three: false,
				four: false,
				five: false
			}

			$scope.cardQueueStateIsValid = function() {

				var valid = false;
				switch($scope.currentState) {
					case "home.app.step1":
						if ($scope.newCard.recipientFirstName != "" && $scope.newCard.recipientLastName != "")
							valid = true;
						else
							valid = false;
						break;
					case "home.app.step2":
						valid = true;
						break;
					case "home.app.step3":
						valid = true; // it can be "anything"
						break;
					case "home.app.step4": // finding your card...
						usSpinnerService.spin('card-find-spinner');
						valid = false;

						valid = true;
						break;
					case "home.app.step5":
						valid = false;

						valid = true;
				}
				
				return valid;
			}

			/**
			 * jQuery plugins to deal with outside of the app
			 * this currently involves the header values on the app
			*/
			queuedButton.on('click', function() {
				alert("hello world!");
			});;

			purchasedButton.on('click', function() {
				console.log($scope.newCard);
				cards.getOccasions().success(function(data){
					console.log("hi ajax call");
					console.log(data);
				});
			})
	});

})();

/**
 * return the recipient's date
 */
function recipientDate() {
	var recipientDate = new Date();
  recipientDate.setDate(recipientDate.getDate()+14);
  var day = recipientDate.getDate();
  var month = recipientDate.getMonth() + 1;
  var year = recipientDate.getFullYear();
  recipientDate = month+"/"+day+"/"+year;
  return recipientDate;
}